language: node_js

node_js:
    - '12.16.1'

cache:
  npm: true
  directories:
    - node_modules

services: mongodb

env:
  global:
    - PATH=$HOME/.local/bin:$PATH
    - secure: "r7dFwka1u8ggj/QtEsK2vKJJcc72euTAY7WCBjEVvFTyQb0M41LTWytRLnef5NRAJc+2vhxo/Wuxr32Jt6Ur9DFB2OiWGlx2VeebCFEl3B2F0iBU9h/3uQ53AjzpvBhUapreG70IrQ3AbmU0tH3O7sMHYtMP2tTQiEhoMm1JDfoVNjswzWWd0qnpDGSFHfEjtvx2VFBoLgqCSNwKT16aaSmealIxcvUQRXchKw5jn7uSH51d46Z+flT0uVwdtF1nxZIrA/mSRCE+ffqoltzURU6jbA16JVsrlaAmfdZ+nRQwbimuWKvKNTRZ4nUkXXqyEqRsvnK3pbWw3X+K2yEGJDqJBAiVz595SpBdsPiQsiYCK/4lgx5yCmGicYpj9ujkW6tB2rALJcvKu5u+CGTYfDix5oVgCDTMxinkm6rZvXz7TfWzCBeAexlHIK1SiQ1dt00cFjx3TyfI/Z8PQ6d4zMkvlgoOcdph7E3NtLhVoXFrau+h9EsLFuz+7mLb66XKzfgcMtBVJ3MYwvAF+rD9TkoIqbb3rvc5ZZMqB0F8tEBtFyIaOjTgTJ7GdcVDfAAuG9Uy1pezZlS3FXcFrVY0V/acfj6qHsvaElc7YvErIR9uFqxCYNS2Np/9bZdxyv50iNx/BRUReVGKQZUyQysiqBZmBxK5s0Fd9R/4phhQbbA="

before_install:
  - pyenv global 3.7.1
  - pip install -U pip
  - pip install awscli

jobs:
  include:
    - stage: test
      script: 
        - cd $TRAVIS_BUILD_DIR/scripts
        - chmod +x config.sh
        - ./config.sh mirai-app-dev
        - node ../src/migrations/migrator.js
        - npm test
    - stage: deploy s3
      script: 
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping s3 deployment."; fi
      deploy:
        provider: cloudformation
        access_key_id: "$AWS_ACCESS_KEY_ID"
        secret_access_key: "$AWS_SECRET_ACCESS_KEY"
        template: ./deployment/s3.yaml
        region: $AWS_DEFAULT_REGION
        stack_name: mirai-s3-stack-prod
        edge: true
      after_deploy:
        - aws cloudformation wait stack-create-complete --stack-name mirai-s3-stack-prod
    - stage: deploy stack
      script: 
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping stack deployment."; fi
      deploy:
        provider: cloudformation
        access_key_id: "$AWS_ACCESS_KEY_ID"
        secret_access_key: "$AWS_SECRET_ACCESS_KEY"
        template: ./deployment/stack.yaml
        region: $AWS_DEFAULT_REGION
        stack_name: mirai-app-stack-prod
        edge: true
    - stage: migrate (prod)
      script:
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping migration."; exit 0; fi
        - cd $TRAVIS_BUILD_DIR/scripts
        - chmod +x config.sh
        - ./config.sh mirai-app-prod
        - node ../src/migrations/migrator.js
    - stage: deploy app
      script:
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping app deployment."; exit 0; fi
        - cd $TRAVIS_BUILD_DIR/scripts
        - chmod +x config.sh
        - ./config.sh mirai-app-prod
        - jq -c '.application.travis_build = ($buildNum | tonumber)' --arg buildNum $TRAVIS_BUILD_NUMBER ../config/config.json > ../config/config2.json
        - jq -c '.application.environment = $env' --arg env 'prod' ../config/config2.json > ../config/config3.json
        - jq -c '.log.debug = ($flag | test("true"))' --arg flag true ../config/config3.json > ../config/config4.json
        - mv ../config/config4.json ../config/config.json
        - npm install
        - cd ..
        - ./node_modules/.bin/gulp
        - zip -r ./deployment/deploy.zip .
      deploy:
        - provider: elasticbeanstalk
          access_key_id: "$AWS_ACCESS_KEY_ID"
          secret_access_key: "$AWS_SECRET_ACCESS_KEY"
          region: $AWS_DEFAULT_REGION
          app: mirai-app-prod
          env: mirai-app-prod
          bucket_name: mirai-app-prod
          zip_file: ./deployment/deploy.zip
          skip_cleanup: true
          edge: true
          on:
            branch: $TRAVIS_BRANCH
          
stages:
  - test
  - name: deploy s3
    if: branch = master
  - name: deploy stack
    if: branch = master
  - name: migrate (prod)
    if: branch = master
  - name: deploy app
    if: branch = master

after_failure:
  - sleep 5