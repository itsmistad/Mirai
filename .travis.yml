language: node_js

node_js:
  - node

cache: npm

services: mongodb

env:
  global:
    - PATH=$HOME/.local/bin:$PATH

before_install:
  - pyenv global 3.7.1
  - pip install -U pip
  - pip install awscli

jobs:
  include:
    - stage: test
      script: 
        - cd $TRAVIS_BUILD_DIR/scripts
        - chmod +x config.sh
        - ./config.sh mirai-app-dev
        - node ../src/migrations/migrator.js
        - npm test
    - stage: deploy s3
      script: 
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping s3 deployment."; fi
      deploy:
        provider: cloudformation
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key:
          secure: $AWS_SECRET_ACCESS_KEY
        template: ./deployment/s3.yaml
        region: $AWS_DEFAULT_REGION
        stack_name: mirai-s3-stack-prod
        edge: true
      after_deploy:
        - aws cloudformation wait stack-create-complete --stack-name mirai-s3-stack-prod
    - stage: delete stack
      script: 
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping stack deletion."; exit 0; fi
        - aws cloudformation delete-stack --stack-name mirai-app-stack-prod
        - aws cloudformation wait stack-delete-complete --stack-name mirai-app-stack-prod
    - stage: deploy stack
      script: 
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping stack deployment."; fi
      deploy:
        provider: cloudformation
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key:
          secure: $AWS_SECRET_ACCESS_KEY
        template: ./deployment/stack.yaml
        region: $AWS_DEFAULT_REGION
        stack_name: mirai-app-stack-prod
        edge: true
    - stage: migrate (prod)
      script:
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping migration."; exit 0; fi
        - cd $TRAVIS_BUILD_DIR/scripts
        - chmod +x config.sh
        - ./config.sh mirai-app-prod
        - node ../src/migrations/migrator.js
    - stage: deploy app
      script:
        - if [ ! "$TRAVIS_PULL_REQUEST" = "false" ]; then echo "PR. skipping app deployment."; exit 0; fi
        - cd $TRAVIS_BUILD_DIR/scripts
        - chmod +x config.sh
        - ./config.sh mirai-app-prod
        - jq -c '.application.travis_build = ($buildNum | tonumber)' --arg buildNum $TRAVIS_BUILD_NUMBER ../config/config.json > ../config/config2.json
        - jq -c '.application.environment = $env' --arg env 'prod' ../config/config2.json > ../config/config3.json
        - jq -c '.log.debug = ($flag | test("true"))' --arg flag true ../config/config3.json > ../config/config4.json
        - mv ../config/config4.json ../config/config.json
        - npm install
        - cd ..
        - zip -r ./deployment/deploy.zip *
      deploy:
        - provider: elasticbeanstalk
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key:
            secure: $AWS_SECRET_ACCESS_KEY
          region: $AWS_DEFAULT_REGION
          app: mirai-app
          env: mirai-app
          bucket_name: mirai-app-prod
          zip_file: ./deployment/deploy.zip
          skip_cleanup: true
          edge: true
          on:
            branch: $TRAVIS_BRANCH
          
stages:
  - test
  - name: deploy s3
    if: branch = master
  - name: delete stack
    if: branch = master
  - name: deploy stack
    if: branch = master
  - name: migrate (prod)
    if: branch = master
  - name: deploy app
    if: branch = master

after_failure:
  - sleep 5